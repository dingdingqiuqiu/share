# location:~/.tmux.conf
# 绑定前缀键为Ctrl+a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# 启用鼠标支持
set -g mouse on

# 绑定配置重载的快捷键
unbind r
bind r source-file ~/.tmux.conf

# 状态栏设置在顶部
# set-option -g status-position top

# 分割窗口
unbind '"'
bind '-' splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
unbind %
bind ';'  splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

# vim和tmux协作
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# 重新绑定删除前一个字符命令Ctrl+h使用Ctrl+a唤醒
bind C-h send-keys C-h

# 重新绑定Ctrl+j使用Ctrl+a唤醒
bind C-j send-keys C-j

# 重新绑定删除光标后所有内容命令Ctrl+k使用Ctrl+a唤醒
# Ctrl-a && Ctrl-k 命令快速删除输入的长命令（Ctrl-a移动到开头)
# Ctrl-u命令是以上命令的等效，更快!且无键位冲突
bind C-k send-keys C-k

# 重新绑定清屏命令到 Ctrl+l使用Ctrl+a唤醒
bind C-l send-keys C-l
